{"version":3,"sources":["assets/plus_button.svg","assets/lixeira_icon.svg","App.js","index.js"],"names":["App","useState","cardNotesArray","setCardNotesArray","titleNotesList","setTitleNotesList","notesStorage","setNotesStorage","titleNoteSelected","setTitleNoteSelected","idNoteSelected","setIdNoteSelected","bodyNoteSelected","setBodyNoteSelected","blockEnterFunctionValue","setBlockEnterFunctionValue","getAllNotes","JSON","parse","localStorage","getItem","map","value","index","onClick","selectNote","id","title","className","removeNotePermanently","src","lixeiraIconImg","alt","reverse","sort","a","b","Date","updated","useEffect","e","noteSelected","find","target","body","push","Math","floor","random","update","setItem","stringify","alert","removeNoteUpdate","notesFiltedForUpdate","filter","Number","notesFilted","console","log","key","onKeyPress","onChange","plusButtonImg","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b88146ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/plus_button.35949e92.svg\";","export default __webpack_public_path__ + \"static/media/lixeira_icon.e773633d.svg\";","import { useEffect, useState } from \"react\";\n\nimport \"./style.scss\"\n\nimport plusButtonImg from \"./assets/plus_button.svg\";\nimport lixeiraIconImg from \"./assets/lixeira_icon.svg\";\nfunction App() {\n\n  let [cardNotesArray, setCardNotesArray] = useState([])\n  let [titleNotesList, setTitleNotesList] = useState([])\n  let [notesStorage, setNotesStorage] = useState([])\n\n  let [titleNoteSelected, setTitleNoteSelected] = useState(\"Notes App\")\n  let [idNoteSelected, setIdNoteSelected] = useState(\"\")\n  let [bodyNoteSelected, setBodyNoteSelected] = useState(\"Selecione uma Nota para utilizar o app...\")\n\n  let [blockEnterFunctionValue, setBlockEnterFunctionValue] = useState(true)\n\n  useEffect(() => {\n    getAllNotes()\n  }, [])\n\n\n  function getAllNotes(){\n    setNotesStorage(notesStorage =  JSON.parse(localStorage.getItem(\"notes-app-storage\") || '[]'))\n\n    setCardNotesArray(cardNotesArray = notesStorage)\n\n    setTitleNotesList(titleNotesList = cardNotesArray.map((value, index) => {\n      return (<li key={value.id}> <span onClick={selectNote} id={value.id} >{value.title}</span> <span className=\"icon-lixeira-span-list-aside\"><img onClick={removeNotePermanently} id={value.id} className=\"lixeira-icon\" src={lixeiraIconImg} alt=\"plus button\"/></span></li>)\n    }).reverse())\n\n    return notesStorage.sort((a, b) => {\n      return new Date(a.updated) > new Date(b.updated) ? -1 : 1\n    })\n  }\n\n  const selectNote = (e) => {\n    const noteSelected = cardNotesArray.find((value, index) => value.id == e.target.id)\n    setTitleNoteSelected(titleNoteSelected = noteSelected.title)\n    setBodyNoteSelected(bodyNoteSelected = noteSelected.body)\n    setIdNoteSelected(idNoteSelected = e.target.id)\n  }\n\n  async function saveNotes(){\n\n    notesStorage.push({\n      id: Math.floor(Math.random() * 1000000),\n      title: \"new title\",\n      body: \"\",\n      update: new Date()\n    })\n\n    localStorage.setItem(\"notes-app-storage\", JSON.stringify(notesStorage))\n    getAllNotes()\n  }\n\n    async function updateNotes (e){\n\n      if(blockEnterFunctionValue){\n\n      if(titleNoteSelected === \"Notes App\"){\n        alert(\"Selecione uma nota para poder editar\")\n        return;\n      }\n      setTitleNoteSelected(titleNoteSelected = e.target.value)\n\n      const notesFiltedForUpdate = await removeNoteUpdate(idNoteSelected) \n\n      notesFiltedForUpdate.push({\n        id: idNoteSelected,\n        title: titleNoteSelected,\n        body: bodyNoteSelected,\n        update: new Date()\n      })\n\n      localStorage.setItem(\"notes-app-storage\", JSON.stringify(notesFiltedForUpdate))\n      getAllNotes()\n\n      }\n  }\n\n    async function updateNotesBody (e){\n\n    if(titleNoteSelected === \"Notes App\"){\n      alert(\"Selecione uma nota para poder editar\")\n      return;\n    }\n    setBodyNoteSelected(bodyNoteSelected = e.target.value)\n\n    const notesFiltedForUpdate = await removeNoteUpdate(idNoteSelected) \n\n    notesFiltedForUpdate.push({\n      id: idNoteSelected,\n      title: titleNoteSelected,\n      body: bodyNoteSelected,\n      update: new Date()\n    })\n\n    localStorage.setItem(\"notes-app-storage\", JSON.stringify(notesFiltedForUpdate))\n    getAllNotes()\n\n  }\n\n  const removeNoteUpdate = (idNoteSelected) => {\n\n    const notesFilted = cardNotesArray.filter( value => {\n      if(Number(value.id) == Number(idNoteSelected)){\n        return false\n      }\n      return true\n    })\n\n    return notesFilted\n  }\n\n  const removeNotePermanently = (e) => {\n    setIdNoteSelected(idNoteSelected = e.target.id)\n\n    const notesFilted = cardNotesArray.filter( value => {\n      if(Number(value.id) == Number(idNoteSelected)){\n        console.log(value)\n        return false\n      }\n      return true\n    })\n\n    localStorage.setItem(\"notes-app-storage\", JSON.stringify(notesFilted))\n\n    getAllNotes()\n  }\n\n  async function blockEnterFunction(e){\n\n    if(e.key == \"Enter\"){\n      await setBlockEnterFunctionValue(blockEnterFunctionValue = false)\n      return;\n    }\n\n    await setBlockEnterFunctionValue(blockEnterFunctionValue = true)\n    return;\n  }\n\n  return (\n    <div className=\"container\">\n      <header>\n        <textarea onKeyPress={blockEnterFunction} onChange={updateNotes} value={titleNoteSelected} />\n      </header>\n      <aside>\n        <div id=\"cabecalho-aside-div\">\n          <h1>Notes</h1>\n          <img onClick={saveNotes} src={plusButtonImg} alt=\"plus button\"/>\n        </div>\n        <div id=\"notes-list-div-aside\">\n          <ul>\n            {titleNotesList}\n          </ul>\n        </div>\n      </aside>\n      <main>\n        <textarea onChange={updateNotesBody} value={bodyNoteSelected} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}